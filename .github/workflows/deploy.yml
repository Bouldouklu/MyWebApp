name: Deploy Blazor WASM to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install .NET WASM Build Tools
      run: dotnet workload install wasm-tools

    - name: Restore Dependencies
      run: dotnet restore MyWebApp/MyWebApp.csproj

    - name: Publish Blazor Project for GitHub Pages
      run: |
        dotnet publish MyWebApp/MyWebApp.csproj \
          -c Release \
          -o ./publish \
          --nologo \
          -p:PublishTrimmed=false \
          -p:TrimMode=partial

    # üÜï DEBUG: Check if CSS files are generated
    - name: Debug CSS Files
      run: |
        echo "=== Checking for CSS files in publish output ==="
        find ./publish -name "*.css" -type f
        echo ""
        echo "=== Contents of wwwroot directory ==="
        ls -la ./publish/wwwroot/ || echo "wwwroot not found"
        echo ""
        echo "=== Checking for MyWebApp.styles.css specifically ==="
        if [ -f "./publish/wwwroot/MyWebApp.styles.css" ]; then
          echo "‚úÖ MyWebApp.styles.css found!"
          echo "File size: $(stat -c%s "./publish/wwwroot/MyWebApp.styles.css") bytes"
          echo "First 500 characters:"
          head -c 500 "./publish/wwwroot/MyWebApp.styles.css"
        else
          echo "‚ùå MyWebApp.styles.css NOT found!"
        fi
        echo ""
        echo "=== Checking for _content directory (sometimes CSS is here) ==="
        find ./publish -path "*/_content/*" -name "*.css" -type f || echo "No _content CSS files found"

    - name: Fix Base Href for GitHub Pages
      run: |
        # Ensure the base href is set correctly for GitHub Pages
        if [ -f "./publish/wwwroot/index.html" ]; then
          echo "Current base href:"
          grep -n "<base" ./publish/wwwroot/index.html || echo "No base tag found"
          
          # Replace the base href to match GitHub Pages URL structure
          sed -i 's|<base href="/" />|<base href="/MyWebApp/" />|g' ./publish/wwwroot/index.html
          
          echo "Updated base href:"
          grep -n "<base" ./publish/wwwroot/index.html
        else
          echo "‚ùå index.html not found in publish output!"
          ls -la ./publish/
          ls -la ./publish/wwwroot/ || echo "wwwroot not found"
          exit 1
        fi

    - name: Create 404.html for SPA routing
      run: cp ./publish/wwwroot/index.html ./publish/wwwroot/404.html

    - name: Add .nojekyll file
      run: touch ./publish/wwwroot/.nojekyll

    - name: Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./publish/wwwroot

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4